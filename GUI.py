# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'GUI.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from operator import index
from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_MainWindow(object):
    def __init__(self):
        self.index = -1
        self.dataDict = {}
        self.nameDict = {
            0 :"Press next",
            1 :"Encoder",     
            2 :"Mapper",      
            3 :"Scrambler",   
            4 :"Modulator",   
            5 :"With Cyclic Prefix",       
            6 :"AWGN Channel",        
            7 :"Without Cyclic Prefix",    
            8 :"Demodulator", 
            9 :"Descrambler", 
            10:"Demapper",    
            11:"Decoder",
            12:"Press previous"     
        }
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(300, 450)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.centralwidget)
        self.verticalLayout.setObjectName("verticalLayout")
        self.horizontalLayout_2 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")
        self.pushButton_3 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_3.setMinimumSize(QtCore.QSize(0, 50))
        self.pushButton_3.setObjectName("pushButton_3")
        self.horizontalLayout_2.addWidget(self.pushButton_3)
        self.pushButton_4 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_4.setMinimumSize(QtCore.QSize(0, 50))
        self.pushButton_4.setObjectName("pushButton_4")
        self.horizontalLayout_2.addWidget(self.pushButton_4)
        self.pushButton_2 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_2.setMinimumSize(QtCore.QSize(0, 50))
        self.pushButton_2.setObjectName("pushButton_2")
        self.horizontalLayout_2.addWidget(self.pushButton_2)
        self.pushButton = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton.setMinimumSize(QtCore.QSize(0, 50))
        self.pushButton.setObjectName("pushButton")
        self.horizontalLayout_2.addWidget(self.pushButton)
        self.verticalLayout.addLayout(self.horizontalLayout_2)
        self.verticalLayout_9 = QtWidgets.QVBoxLayout()
        self.verticalLayout_9.setObjectName("verticalLayout_9")
        self.label_3 = QtWidgets.QLabel(self.centralwidget)
        self.label_3.setObjectName("label_3")
        self.verticalLayout_9.addWidget(self.label_3)
        self.verticalLayout.addLayout(self.verticalLayout_9)
        self.verticalLayout_10 = QtWidgets.QVBoxLayout()
        self.verticalLayout_10.setObjectName("verticalLayout_10")
        self.lineEdit = QtWidgets.QLineEdit(self.centralwidget)
        self.lineEdit.setText("")
        self.lineEdit.setObjectName("lineEdit")
        self.verticalLayout_10.addWidget(self.lineEdit)
        self.verticalLayout.addLayout(self.verticalLayout_10)
        self.verticalLayout_14 = QtWidgets.QVBoxLayout()
        self.verticalLayout_14.setObjectName("verticalLayout_14")
        self.label_5 = QtWidgets.QLabel(self.centralwidget)
        self.label_5.setObjectName("label_5")
        self.verticalLayout_14.addWidget(self.label_5)
        self.lineEdit_3 = QtWidgets.QLineEdit(self.centralwidget)
        self.lineEdit_3.setObjectName("lineEdit_3")
        self.verticalLayout_14.addWidget(self.lineEdit_3)
        self.verticalLayout.addLayout(self.verticalLayout_14)
        self.verticalLayout_13 = QtWidgets.QVBoxLayout()
        self.verticalLayout_13.setObjectName("verticalLayout_13")
        self.label_4 = QtWidgets.QLabel(self.centralwidget)
        self.label_4.setObjectName("label_4")
        self.verticalLayout_13.addWidget(self.label_4)
        self.lineEdit_2 = QtWidgets.QLineEdit(self.centralwidget)
        self.lineEdit_2.setObjectName("lineEdit_2")
        self.verticalLayout_13.addWidget(self.lineEdit_2)
        self.verticalLayout.addLayout(self.verticalLayout_13)
        self.verticalLayout_4 = QtWidgets.QVBoxLayout()
        self.verticalLayout_4.setObjectName("verticalLayout_4")
        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setMinimumSize(QtCore.QSize(0, 50))
        self.label.setObjectName("label")
        self.verticalLayout_4.addWidget(self.label)
        self.scrollArea = QtWidgets.QScrollArea(self.centralwidget)
        self.scrollArea.setWidgetResizable(True)
        self.scrollArea.setObjectName("scrollArea")
        self.scrollAreaWidgetContents = QtWidgets.QWidget()
        self.scrollAreaWidgetContents.setGeometry(QtCore.QRect(0, 0, 345, 154))
        self.scrollAreaWidgetContents.setObjectName("scrollAreaWidgetContents")
        self.verticalLayout_5 = QtWidgets.QVBoxLayout(self.scrollAreaWidgetContents)
        self.verticalLayout_5.setObjectName("verticalLayout_5")
        self.label_2 = QtWidgets.QLabel(self.scrollAreaWidgetContents)
        self.label_2.setMinimumSize(QtCore.QSize(0, 50))
        self.label_2.setText("")
        self.label_2.setObjectName("label_2")
        self.verticalLayout_5.addWidget(self.label_2)
        self.scrollArea.setWidget(self.scrollAreaWidgetContents)
        self.verticalLayout_4.addWidget(self.scrollArea)
        self.verticalLayout.addLayout(self.verticalLayout_4)
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 367, 22))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.pushButton_3.setText(_translate("MainWindow", "Run"))
        self.pushButton_4.setText(_translate("MainWindow", "Start"))
        self.pushButton_2.setText(_translate("MainWindow", "Next"))
        self.pushButton.setText(_translate("MainWindow", "Previous"))
        self.label_3.setText(_translate("MainWindow", "Enter Input Stream"))
        self.label_5.setText(_translate("MainWindow", "Enter snr"))
        self.label_4.setText(_translate("MainWindow", "Enter executable file path (Not relative path)"))
        self.label.setText(_translate("MainWindow", "Press Next"))
        self.label_2.setWordWrap(True)
        self.pushButton_2.clicked.connect(self.nextEvent)
        self.pushButton.clicked.connect(self.prevEvent)
        self.pushButton_3.clicked.connect(self.runProgram)
        self.pushButton_4.clicked.connect(self.parseOutFile)

    def runProgram(self):
        file = open("input.txt", "w")
        file.write(self.lineEdit.text() + "\n")
        file.write(self.lineEdit_3.text())
        file.close()
        import os
        os.popen(self.lineEdit_2.text())

    def parseOutFile(self):
        #######################################################
        with open("output.txt", 'r', encoding='utf-8') as f:
            inputData = f.readlines()

        data = []
        for line in inputData:
            data.append(str(line.split('\n')[0]))
        #######################################################
        mapperData = ""
        for line in data[2:10]:
            mapperData = mapperData + line + "\n" 
        #######################################################
        scramblerData = ""
        for line in data[11:19]:
            scramblerData = scramblerData + line + "\n" 
        #######################################################
        modulatorData = ""
        for line in data[21:52]:
            modulatorData = modulatorData + line + "\n" 
        #######################################################
        withCP = ""
        for line in data[53:93]:
            withCP = withCP + line + "\n" 
        #######################################################
        withNoise = ""
        for line in data[94:134]:
            withNoise = withNoise + line + "\n" 
        #######################################################
        withoutCP = ""
        for line in data[135:167]:
            withoutCP = withoutCP + line + "\n" 
        #######################################################
        demodulatorData = ""
        for line in data[168:176]:
            demodulatorData = demodulatorData + line + "\n" 
        #######################################################
        demodulatorData = ""
        for line in data[168:176]:
            demodulatorData = demodulatorData + line + "\n" 
        #######################################################
        descramblerData = ""
        for line in data[177:185]:
            descramblerData = descramblerData + line + "\n" 
        #######################################################
        self.dataDict[0]  = data[0]
        self.dataDict[1]  = mapperData
        self.dataDict[2]  = scramblerData
        self.dataDict[3]  = modulatorData
        self.dataDict[4]  = withCP
        self.dataDict[5]  = withNoise
        self.dataDict[6]  = withoutCP
        self.dataDict[7]  = demodulatorData
        self.dataDict[8]  = descramblerData
        self.dataDict[9]  = data[186]
        self.dataDict[10] = data[188]
        #######################################################
        if self.index >= 0 and self.index <= len(self.dataDict) - 1:
            self.label_2.setText(self.dataDict[self.index])

    def nextEvent(self):
        self.index += 1
        if self.index <= (len(self.dataDict) - 1):
            self.label.setText(self.nameDict[self.index + 1])
            self.label_2.setText(self.dataDict[self.index])
        else:
            self.index = len(self.dataDict)
            self.label.setText(self.nameDict[self.index + 1])
            self.label_2.setText("")
        self.updateDimensions()

    def prevEvent(self):
        self.index -= 1
        if self.index >= 0:
            self.label.setText(self.nameDict[self.index + 1])
            self.label_2.setText(self.dataDict[self.index])
        else:
            self.index = -1
            self.label.setText(self.nameDict[self.index + 1])
            self.label_2.setText("")
        self.updateDimensions()

    def updateDimensions(self):
        self.label.adjustSize()
        self.label_2.adjustSize()


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
